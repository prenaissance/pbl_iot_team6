// <auto-generated />
using System;
using System.Collections.Generic;
using Dispenser.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dispenser.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20240306163750_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dispenser.Models.PillSchedule.PillSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("PillSlotId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.Property<List<TimeOnly>>("Times")
                        .IsRequired()
                        .HasColumnType("time without time zone[]");

                    b.HasKey("Id");

                    b.HasIndex("PillSlotId");

                    b.ToTable("PillSchedules");
                });

            modelBuilder.Entity("Dispenser.Models.PillSchedule.PillSlot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("PillCount")
                        .HasColumnType("bigint");

                    b.Property<string>("PillName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PillSlots");
                });

            modelBuilder.Entity("Dispenser.Models.PillSchedule.PillSchedule", b =>
                {
                    b.HasOne("Dispenser.Models.PillSchedule.PillSlot", "PillSlot")
                        .WithMany("PillSchedules")
                        .HasForeignKey("PillSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PillSlot");
                });

            modelBuilder.Entity("Dispenser.Models.PillSchedule.PillSlot", b =>
                {
                    b.Navigation("PillSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
